---
Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name that joins all the stacks

  ServicesDomain:
    Type: String
    Description: DNS namespace used by services e.g. default.svc.cluster.local

  AppMeshMeshName:
    Type: String
    Description: Name of mesh

Resources:

  ColorTellerBlackVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: !Sub 'colorteller-black-vn-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "colorteller-black.${ServicesDomain}"

  ColorTellerBlueVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: !Sub 'colorteller-blue-vn-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "colorteller-blue.${ServicesDomain}"

  ColorTellerRedVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: !Sub 'colorteller-red-vn-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "colorteller-red.${ServicesDomain}"

  ColorTellerWhiteVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: !Sub 'colorteller-white-vn-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: "/ping"
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "colorteller.${ServicesDomain}"

  ColorTellerVirtualRouter:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualRouterName: !Sub 'colorteller-vr-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http

  ColorTellerRoute:
    Type: AWS::AppMesh::Route
    DependsOn:
      - ColorTellerVirtualRouter
      - ColorTellerWhiteVirtualNode
      - ColorTellerRedVirtualNode
      - ColorTellerBlueVirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualRouterName: !Sub 'colorteller-vr-${EnvironmentName}'
      RouteName: !Sub 'colorteller-route-${EnvironmentName}'
      Spec:
        HttpRoute:
          Action:
            WeightedTargets:
              - VirtualNode: !Sub 'colorteller-white-vn-${EnvironmentName}'
                Weight: 1
              - VirtualNode: !Sub 'colorteller-blue-vn-${EnvironmentName}'
                Weight: 1
              - VirtualNode: !Sub 'colorteller-red-vn-${EnvironmentName}'
                Weight: 1
          Match:
            Prefix: "/"

  ColorTellerVirtualService:
    Type: AWS::AppMesh::VirtualService
    DependsOn:
      - ColorTellerVirtualRouter
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualServiceName: !Sub "colorteller.${ServicesDomain}"
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: !Sub 'colorteller-vr-${EnvironmentName}'

  TcpEchoVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: !Sub 'tcpecho-vn-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 2701
              Protocol: tcp
            HealthCheck:
              Protocol: tcp
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "tcpecho.${ServicesDomain}"

  TcpEchoVirtualService:
    Type: AWS::AppMesh::VirtualService
    DependsOn:
      - TcpEchoVirtualNode
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualServiceName: !Sub "tcpecho.${ServicesDomain}"
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName: !Sub 'tcpecho-vn-${EnvironmentName}'

  ColorGatewayVirtualNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
      - ColorTellerVirtualService
      - TcpEchoVirtualService
    Properties:
      MeshName: !Ref AppMeshMeshName
      VirtualNodeName: !Sub 'colorgateway-vn-${EnvironmentName}'
      Spec:
        Listeners:
          - PortMapping:
              Port: 9080
              Protocol: http
        ServiceDiscovery:
          DNS:
            Hostname: !Sub "colorgateway.${ServicesDomain}"
        Backends:
          - VirtualService:
              VirtualServiceName: !Sub "colorteller.${ServicesDomain}"
          - VirtualService:
              VirtualServiceName: !Sub "tcpecho.${ServicesDomain}"
